#!/bin/bash\n\n# Chronomancy Mini App Startup Script\n# Starts the FastAPI server and sets up Cloudflare tunnel\n\nset -e\n\necho \"🌀 Starting Chronomancy Mini App...\"\n\n# Change to miniapp directory\ncd \"$(dirname \"$0\")\"\n\n# Check if virtual environment exists, create if not\nif [ ! -d \"venv\" ]; then\n    echo \"Creating Python virtual environment...\"\n    python3 -m venv venv\nfi\n\n# Activate virtual environment\nsource venv/bin/activate\n\n# Install dependencies\necho \"Installing dependencies...\"\npip install -r requirements.txt\n\n# Check if database exists\nif [ ! -f \"../bot/chronomancy.db\" ]; then\n    echo \"⚠️  Warning: Bot database not found at ../bot/chronomancy.db\"\n    echo \"Make sure the Telegram bot has been run at least once to create the database.\"\nfi\n\n# Start FastAPI server in background\necho \"Starting FastAPI server with uvicorn...\"\nexport PORT=5000\nuvicorn server:app --host 0.0.0.0 --port 5000 --reload &\nSERVER_PID=$!\n\n# Wait for server to start\nsleep 3\n\n# Check if Cloudflare tunnel is configured\nif [ -f \"cloudflare-tunnel.yml\" ] && command -v cloudflared &> /dev/null; then\n    echo \"Starting Cloudflare tunnel...\"\n    cloudflared tunnel --config cloudflare-tunnel.yml run &\n    TUNNEL_PID=$!\n    \n    echo \"✅ Chronomancy Mini App is running with FastAPI!\"\n    echo \"Access via Cloudflare tunnel: https://chronomancy.yourdomain.com\"\n    echo \"FastAPI docs available at: https://chronomancy.yourdomain.com/docs\"\nelse\n    echo \"ℹ️  Cloudflare tunnel not configured. Server running locally on:\"\n    echo \"   http://localhost:5000\"\n    echo \"   FastAPI docs: http://localhost:5000/docs\"\n    echo \"\"\n    echo \"To set up Cloudflare tunnel:\"\n    echo \"1. Install cloudflared: https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/\"\n    echo \"2. Create tunnel: cloudflared tunnel create chronomancy-miniapp\"\n    echo \"3. Update cloudflare-tunnel.yml with your credentials and domain\"\n    echo \"4. Add DNS record: cloudflared tunnel route dns chronomancy-miniapp chronomancy.yourdomain.com\"\nfi\n\n# Function to cleanup on exit\ncleanup() {\n    echo \"\\n🛑 Shutting down Chronomancy Mini App...\"\n    \n    if [ ! -z \"$SERVER_PID\" ]; then\n        kill $SERVER_PID 2>/dev/null || true\n    fi\n    \n    if [ ! -z \"$TUNNEL_PID\" ]; then\n        kill $TUNNEL_PID 2>/dev/null || true\n    fi\n    \n    echo \"✅ Cleanup complete\"\n    exit 0\n}\n\n# Set up signal handlers\ntrap cleanup SIGINT SIGTERM\n\n# Keep script running\necho \"\\nPress Ctrl+C to stop...\"\nwait 